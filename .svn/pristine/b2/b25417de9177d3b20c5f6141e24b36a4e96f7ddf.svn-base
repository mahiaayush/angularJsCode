import { Component, OnInit, AfterViewInit } from '@angular/core';
import { Router } from '@angular/router';
import { CustomModalPopUpModel, CustomModalPopUpService } from '../../../acore/components/custom-modal-pop-up';
import { UrlConstants, SessionObject, ProjectUtils } from '../../../acore/utility';
import { PathConstants } from '../../../acore/services';

import { DesktopService } from '../desktop.service';
import { BaseComponent } from '../../../acore/base';
import { ContactComponent } from '../contact/contact.component';

import {
  TopMenuNavigationData
} from './top-menu.navigation.data';
import { Utils } from 'ag-grid';

@Component({
  selector: 'app-top-menu',
  templateUrl: './top-menu.component.html',
  styleUrls: ['./top-menu.component.css']
})
export class TopMenuComponent extends BaseComponent implements OnInit, AfterViewInit {
  flag = true;
  showModelPopup: boolean;

  reportNav: Array<any> = [];
  padNav: Array<any> = [];
  userMagNav: Array<any> = [];
  basicSetting: CustomModalPopUpModel;
  LoginUserName: string;

  constructor(
    private customModalPopUpServiceprivate: CustomModalPopUpService,
    private router: Router,
    private desktopService: DesktopService,
    public pathConstants: PathConstants) {
    super(desktopService);
    this.reportNav = TopMenuNavigationData.REPORT;
    this.padNav = TopMenuNavigationData.PAD_PROJECT;
    this.userMagNav = TopMenuNavigationData.USER_MANAGEMENT;
    this.createMyPopUpAdd();
    const displayUserName = ProjectUtils.getSessionObject();
    this.LoginUserName = displayUserName.userDetails.firstName + ' ' + displayUserName.userDetails.lastName;
  }


  ngOnInit() {
    this.router.events
      .subscribe((data) => {
        if (this.router.url === '/pages') {
          this.flag = true;
        } else {
          this.flag = false;
        }
      });
  }

  ngAfterViewInit() {
    ProjectUtils.html.addCssToEle('topEleID', 'child-class', 'active', 'text-gray');
  }


  createMyPopUpAdd() {
    this.basicSetting = new CustomModalPopUpModel();
    this.basicSetting.id = 'profile';
    this.basicSetting.title = 'Update Your Account';
    this.basicSetting.noButtons = true;
    this.basicSetting.upperCross = true;
  }
  loggedInUserDetail() {
    this.customModalPopUpServiceprivate.show(this.basicSetting);
    this.showModelPopup = !this.showModelPopup;


  }

  authSignOut() {
    localStorage.removeItem('sessionObject');
    localStorage.removeItem('_AuthToken');
    this.router.navigate(['']);
  }





}
